[
  {
    "name":"akka.actor.ActorCell",
    "allDeclaredFields":true
  },
  {
    "name":"akka.actor.DefaultSupervisorStrategy",
    "methods":[{ "name":"<init>", "parameterTypes":[] }]
  },
  {
    "name":"akka.actor.LightArrayRevolverScheduler",
    "methods":[{ "name":"<init>", "parameterTypes":["com.typesafe.config.Config", "akka.event.LoggingAdapter", "java.util.concurrent.ThreadFactory"] }]
  },
  {
    "name":"akka.actor.LightArrayRevolverScheduler$TaskHolder",
    "fields":[{"name":"task"}]
  },
  {
    "name":"akka.actor.LocalActorRefProvider",
    "methods":[{ "name":"<init>", "parameterTypes":["java.lang.String", "akka.actor.ActorSystem$Settings", "akka.event.EventStream", "akka.actor.DynamicAccess"] }]
  },
  {
    "name":"akka.actor.LocalActorRefProvider$Guardian",
    "allDeclaredFields":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"akka.actor.LocalActorRefProvider$SystemGuardian",
    "allDeclaredFields":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"akka.actor.Props$EmptyActor",
    "methods":[{ "name":"<init>", "parameterTypes":[] }]
  },
  {
    "name":"akka.actor.RepointableActorRef",
    "fields":[
      {"name":"_cellDoNotCallMeDirectly"},
      {"name":"_lookupDoNotCallMeDirectly"}
    ]
  },
  {
    "name":"akka.dispatch.AbstractNodeQueue",
    "fields":[{"name":"_tailDoNotCallMeDirectly"}]
  },
  {
    "name":"akka.dispatch.AbstractNodeQueue$Node",
    "fields":[{"name":"_nextDoNotCallMeDirectly"}]
  },
  {
    "name":"akka.dispatch.BoundedControlAwareMessageQueueSemantics"
  },
  {
    "name":"akka.dispatch.BoundedDequeBasedMessageQueueSemantics"
  },
  {
    "name":"akka.dispatch.BoundedMessageQueueSemantics"
  },
  {
    "name":"akka.dispatch.ControlAwareMessageQueueSemantics"
  },
  {
    "name":"akka.dispatch.DequeBasedMessageQueueSemantics"
  },
  {
    "name":"akka.dispatch.Mailbox",
    "fields":[
      {"name":"_statusDoNotCallMeDirectly"},
      {"name":"_systemQueueDoNotCallMeDirectly"}
    ]
  },
  {
    "name":"akka.dispatch.MessageDispatcher",
    "fields":[
      {"name":"_inhabitantsDoNotCallMeDirectly"},
      {"name":"_shutdownScheduleDoNotCallMeDirectly"}
    ]
  },
  {
    "name":"akka.dispatch.MultipleConsumerSemantics"
  },
  {
    "name":"akka.dispatch.UnboundedControlAwareMessageQueueSemantics"
  },
  {
    "name":"akka.dispatch.UnboundedDequeBasedMessageQueueSemantics"
  },
  {
    "name":"akka.dispatch.UnboundedMailbox",
    "methods":[{ "name":"<init>", "parameterTypes":["akka.actor.ActorSystem$Settings", "com.typesafe.config.Config"] }]
  },
  {
    "name":"akka.dispatch.UnboundedMessageQueueSemantics"
  },
  {
    "name":"akka.dispatch.forkjoin.ForkJoinPool",
    "fields":[
      {"name":"ctl"},
      {"name":"indexSeed"},
      {"name":"plock"},
      {"name":"stealCount"}
    ]
  },
  {
    "name":"akka.dispatch.forkjoin.ForkJoinPool$WorkQueue",
    "fields":[{"name":"qlock"}]
  },
  {
    "name":"akka.dispatch.forkjoin.ForkJoinTask",
    "fields":[{"name":"status"}]
  },
  {
    "name":"akka.event.DeadLetterListener",
    "allDeclaredFields":true,
    "methods":[{ "name":"<init>", "parameterTypes":[] }]
  },
  {
    "name":"akka.event.DefaultLoggingFilter",
    "methods":[{ "name":"<init>", "parameterTypes":["akka.actor.ActorSystem$Settings", "akka.event.EventStream"] }]
  },
  {
    "name":"akka.event.EventStreamUnsubscriber",
    "allDeclaredFields":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"akka.event.LoggerMailboxType",
    "methods":[{ "name":"<init>", "parameterTypes":["akka.actor.ActorSystem$Settings", "com.typesafe.config.Config"] }]
  },
  {
    "name":"akka.event.LoggerMessageQueueSemantics"
  },
  {
    "name":"akka.event.Logging$DefaultLogger",
    "allDeclaredFields":true,
    "methods":[{ "name":"<init>", "parameterTypes":[] }]
  },
  {
    "name":"akka.pattern.PromiseActorRef",
    "fields":[
      {"name":"_stateDoNotCallMeDirectly"},
      {"name":"_watchedByDoNotCallMeDirectly"}
    ]
  },
  {
    "name":"akka.routing.ConsistentHashingPool",
    "methods":[{ "name":"<init>", "parameterTypes":["com.typesafe.config.Config"] }]
  },
  {
    "name":"akka.routing.RoundRobinPool",
    "methods":[{ "name":"<init>", "parameterTypes":["com.typesafe.config.Config"] }]
  },
  {
    "name":"akka.stream.impl.StreamSupervisor",
    "allDeclaredFields":true
  },
  {
    "name":"akka.stream.impl.fusing.ActorGraphInterpreter",
    "allDeclaredFields":true
  }
]
